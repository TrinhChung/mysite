version: 2.1
orbs:
  python: circleci/python@1.5.0
  docker: circleci/docker@2.2.0

jobs:
  django-test:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          environment:
            COMPOSE_VERSION: "2.15.1"
          command: |
            sudo apt update
            sudo apt install apt-transport-https ca-certificates curl software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
            apt-cache policy docker-ce
            sudo apt install docker-ce docker-compose-plugin
            sudo usermod -aG docker ${USER}
      - run:
          name: Start container and verify it's working
          command: docker-compose up --build
      - run: |
          docker ps
          docker network ls
      - run:
          name: wait container mysql
          command: |
            echo "Waiting for MYSQL"
            while ! nc -vz localhost 3306
            do
              sleep 1
              echo "."
            done 
            echo "connect success"
      # - run:
      #     name: install dependencies
      #     command: pip install -r requirements.txt
      # - run:
      #     name: run tests
      #     command: python manage.py test --noinput --keepdb

  build-and-push:
    environment:
      DOCKER_IMAGE: trinhchung/cicd
      DOCKER_TAG: 0.0.1
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check:
          docker-username: DOCKER_USER
          docker-password: DOCKER_PASSWORD
      - docker/build:
          image: $DOCKER_IMAGE
          tag: $DOCKER_TAG
      - docker/push:
          digest-path: /tmp/digest.txt
          image: $DOCKER_IMAGE
          tag: $DOCKER_TAG

      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"
workflows:
  build-deploy:
    jobs:
      - django-test
      # - build-and-push:
      #     requires:
      #       - django-test
      #     filters:
      #       branches:
      #         only:
      #           - circleci-project-setup
