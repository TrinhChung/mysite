version: "3"
volumes:
  static_volume:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - "GF_SMTP_ENABLED=true"
      - "GF_SMTP_HOST=smtp.gmail.com:587"
      - "GF_SMTP_USER=chungtrinh2k2@gmail.com"
      - "GF_SMTP_PASSWORD=ptfanznmenvpxfij"
      - "GF_SMTP_FROM_ADDRESS=chungtrinh2k2@gmail.com"
      #- "GF_SERVER_DOMAIN=grafana.recurup.com"
      #- "GF_SERVER_ROOT_URL=mysite.recurup.com"
    restart: unless-stopped
  my-mysql:
    container_name: mysql
    image: mysql:8.0
    hostname: mysql
    environment:
      - MYSQL_DATABASE=mysite
      - MYSQL_USER=siteuser
      - MYSQL_PASSWORD=chungtrinh1904
      - MYSQL_ROOT_PASSWORD=chungtrinh1904
    volumes:
      - /tmp/app/mysqld:/run/mysqld
      - ./db:/var/lib/mysql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    ports:
      - 3306:3306
    command: --default-authentication-plugin=mysql_native_password
  my-django:
    container_name: django
    image: django-docker:0.0.1
    build: .
    command:
      sh -c "python manage.py makemigrations && python manage.py migrate &&
      python manage.py loaddata seeder.json && python manage.py collectstatic --no-input --clear &&
      export PRODUCT=1 && cd catalog && django-admin compilemessages && cd .. && gunicorn locallibrary.wsgi runserver --bind 0.0.0.0:8000"
    expose:
      - 8000
    # restart: always
    volumes:
      - /tmp/app/mysqld:/var/run/mysqld
      - .:/app
      - static_volume:/app/staticfiles
    depends_on:
      my-mysql:
        condition: service_healthy

  my-nginx:
    container_name: nginx
    build: ./nginx
    volumes:
      - static_volume:/app/staticfiles
    ports:
      - 80:80
    restart: always
    depends_on:
      - my-django
